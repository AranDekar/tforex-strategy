swagger: "2.0"
info:
  version: "0.0.1"
  title: Startegy
# during dev, should point to your local machine
host: localhost:10030
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
securityDefinitions:
  api_key:
    type: apiKey
    in: header
    name: api-key
paths:
  /strategies:
    x-swagger-router-controller: strategy.controller
    get:
      tags: 
        - strategy
      security:
        - api_key: []
      description: Returns a list of available strategies
      produces:
        - application/json
      operationId: get
      parameters: 
        - name: _id
          in: query
          description: The id of a specific strategy
          required: false
          type: string
      responses:
        "200":
          description: A list of strategies
          schema: 
            type: array
            items:
              $ref: "#/definitions/Strategy"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags: 
        - strategy
      security:
        - api_key: []
      description: adds a new strategy
      produces:
        - application/json
      operationId: post
      parameters:
        - name: strategy
          description: the complete strategy object
          in: body
          required: true
          schema:
            $ref: "#/definitions/Strategy"
      responses:
        200:
          description: OK - created successfully
          schema: 
            $ref: "#/definitions/Strategy"
  /strategy/events:
    x-swagger-router-controller: strategy-event.controller
    get:
      tags: 
        - strategy-event
      security:
        - api_key: []
      description: Returns the events where the strategy hooked up to
      produces:
        - application/json
      operationId: getEvents
      parameters: 
        - name: id
          in: query
          description: The id of a specific strategy
          required: true
          type: string
      responses:
        "200":
          description: A list of events
          schema: 
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags: 
        - strategy-event
      security:
        - api_key: []
      description: adds a new event to the list of events of a strategy
      operationId: postEvent
      parameters:
        - name: id
          in: query
          description: The id of a specific strategy
          required: true
          type: string
        - name: events
          description: the event that strategy hooks up to
          in: body
          required: true
          schema: 
            type: array
            items:
              type: string
      responses:
        200:
          description: OK - created successfully
          schema: 
            $ref: "#/definitions/Strategy"
  /strategy/backtests:
    x-swagger-router-controller: strategy-backtest.controller
    post:
      tags: 
        - strategy-backtest
      security:
        - api_key: []
      description: starts backtesting a strategy
      operationId: postBacktest
      consumes:
        - application/octet-stream
      parameters:
        - name: strategyRevisionId
          description: the revision of the strategy to test
          type: string
          in: query
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/EventResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /strategy/revisions:
    x-swagger-router-controller: strategy-revision.controller
    post:
      tags: 
        - strategy-revision
      security:
        - api_key: []
      description: adding a new revision to the strategy a new revision has a code to compile (the algorithm) 
                    and will be given a new auto incremental number
      operationId: postRevision
      parameters:
        - name: revision
          description: the new revision to post
          in: body
          required: true
          schema: 
            $ref: "#/definitions/StrategyRevision"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/EventResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /strategy/revisions/{id}:
    x-swagger-router-controller: strategy-revision.controller
    put:
      tags: 
        - strategy-revision
      security:
        - api_key: []
      description: updating an existing revision to the strategym a revision has a code to compile which is mostly 
        being updated
      operationId: putRevision
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: revision
          description: the new revision to post
          in: body
          required: true
          schema: 
            $ref: "#/definitions/StrategyRevision"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/EventResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Strategy:
    type: object
    required:
      - name
      - description
      - postedBy
    properties:
      name:
        type: string
      description:
        type: string
      postedBy:
        type: string
  StrategyRevision:
    type: object
    required:
      - strategy
      - code
    properties:
      id:
        type: string
        description: the id of the strategyRevision
      strategy:
        type: string
        description: this is the ref key to the parent strategy object the owner strategy
      number:
        type: number
        description: this is the new number of the revision, this is not meant to be posted by the caller
      code:
        type: string
        description: the algorithm of the strategy in new revision this is a moduel in javascript
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  EventResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    properties:
      message:
        type: string
    required:
      - message